import { Err, Ok, type Result } from 'ts-results-es';
import z from 'zod';

import { type Branded, zodValidationError } from '{{basicModelTypesLoc}}';
import { type {{serviceErrorType}} } from './{{serviceErrorType}}s.js';

const {{serviceParametersSchema}} = 
    // TODO for AI assistant: Place a zod validation schema here, for a z.object() that has these attributes: {{formattedParameters}}
;

export type {{serviceParametersType}} = {{{validatedParametersType}}};

export function parse{{serviceParametersType}}(
    params: { {{formattedParametersWithAnyTypes}} }
): {{{wrappedServiceParametersType}}} {
    const result = {{serviceParametersSchema}}.safeParse(params);
    return result.success
        ? Ok(result.data as {{serviceParametersType}})
        : Err(zodValidationError(result.error));
}
