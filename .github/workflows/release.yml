name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Check changesets
        run: pnpm changeset status --output changesets.json

      - name: Parse changesets JSON
        id: parse
        run: |
          if [ -f changesets.json ]; then
            runtime=$(node -p "JSON.parse(require('fs').readFileSync('changesets.json', 'utf8')).releases.some(r => r.name === '@ddd-components/runtime')")
            scaffolder=$(node -p "JSON.parse(require('fs').readFileSync('changesets.json', 'utf8')).releases.some(r => r.name === '@ddd-components/scaffolder')")
            echo "runtime_has_changesets=$runtime" >> $GITHUB_OUTPUT
            echo "scaffolder_has_changesets=$scaffolder" >> $GITHUB_OUTPUT
          else
            echo "runtime_has_changesets=false" >> $GITHUB_OUTPUT
            echo "scaffolder_has_changesets=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        if: steps.parse.outputs.runtime_has_changesets == 'true' || steps.parse.outputs.scaffolder_has_changesets == 'true'
        with:
          version: pnpm changeset version
          publish: pnpm changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get scaffolder version
        if: steps.parse.outputs.scaffolder_has_changesets == 'true'
        id: get_version
        run: echo "version=$(node -p "require('./packages/scaffolder/package.json').version")" >> $GITHUB_OUTPUT

      - name: Create GitHub release and upload files for scaffolder
        if: steps.parse.outputs.scaffolder_has_changesets == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: '@ddd-components/scaffolder@${{ steps.get_version.outputs.version }}'
          generate_release_notes: true
          files: |
            packages/scaffolder/dist/index.js
            README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
