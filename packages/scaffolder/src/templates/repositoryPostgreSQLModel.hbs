/* eslint-disable @typescript-eslint/no-empty-object-type */
/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */
import { Model } from 'objection';

import { {{aggregateName}} } from '../../domainmodel/{{aggregateName}}.js';

// TypeScript Declaration merging takes place here, by design!
// See https://www.typescriptlang.org/docs/handbook/declaration-merging.html
export interface {{aggregateName}}Model extends {{aggregateName}} {}
export class {{aggregateName}}Model extends Model {
    static override tableName = '{{tableName}}';

    static override jsonSchema = {
        type: 'object',
        properties: {
            createdAt: {
                type: 'string',
                format: 'date-time'
            },
            updatedAt: {
                type: 'string',
                format: 'date-time'
            },
            {{#each attributes}}
            {{name}}: {
                type: '{{jsonSchemaType}}'{{#if format}},
                format: '{{format}}'{{/if}}
            },
            {{/each}}
        },
        required: [
            'createdAt',
            'updatedAt',
            {{#each attributes}}
            {{#if required}}'{{name}}'{{#unless @last}},{{/unless}}{{/if}}
            {{/each}}
        ]
    };

    // Timestamps handling
    override $beforeInsert() {
        this.createdAt = new Date().toISOString();
        this.updatedAt = new Date().toISOString();
    }

    override $beforeUpdate() {
        this.updatedAt = new Date().toISOString();
    }
}
